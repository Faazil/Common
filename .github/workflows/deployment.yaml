name: AEM Deployment Workflow

on:
  repository_dispatch:
    types: [deploy-environment]

jobs:
  Checkout-Repository:
    runs-on: rhel888
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3


      - name: Convert YAML to JSON
        run: |
          python -c 'import yaml, json, sys; json.dump(yaml.safe_load(sys.stdin), sys.stdout)' < environments.yml > environments.json

      - name: Extract Environment URL
        id: extract_url
        run: |
          environment=${{ github.event.client_payload.environment }}
          url=$(jq -r ".dns_file[\"$environment\"]" environments.json)
          if [ -z "$url" ]; then
            echo "Invalid environment: $environment"
            exit 1
          fi
          echo "AEM_HOST=$url" >> $GITHUB_ENV

      - name: check variable
        run: echo $AEM_HOST

      - name: Upload package artifact
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: we.retail.community.apps-1.11.84.zip

  Upload-Package:
    runs-on: rhel888
    needs: Checkout-Repository
    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v2
        with:
          name: package

      - name: Upload AEM package (conditional)
        env:
          AEM_CREDENTIALS: ${{ secrets.AEM_CREDENTIALS }}
          AEM_PACKAGE_NAME: "we.retail.community.apps-1.11.84.zip"
          AEM_HOST: ${{ env.AEM_HOST }}
        run: |
          curl -u $AEM_CREDENTIALS \
            -F cmd=upload \
            -F force=true \
            -F package=@$AEM_PACKAGE_NAME \
            http://$AEM_HOST/crx/packmgr/service/.json
